package org.techhub.repository;

import java.sql.SQLException;
import java.sql.Timestamp;

import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;
import org.techhub.model.OrdersModel;

public class OrdersRepositoryImpl extends DBSTATE implements OrdersRepository{

	private static Logger logger = Logger.getLogger(OrdersRepositoryImpl.class);
	static {
		PropertyConfigurator.configure(
				"C:\\Users\\abcd\\Desktop\\Project\\EcommerceCartSystem\\src\\main\\resources\\application.properties");
	}
	
	int orderId = -1;
	public int createOrder(OrdersModel order) {
		try {
			stmt = conn.prepareStatement("insert into orders (user_id, total_price, order_status, order_date) values(?,?,?,?)");
			stmt.setInt(1, order.getUser_id());
			stmt.setDouble(2, order.getTotal_price());
			stmt.setString(3, order.getOrder_status());
			stmt.setTimestamp(4, Timestamp.valueOf(order.getOrder_date()));
			
			int result = stmt.executeUpdate();
			
			if(result>0) {
				tempStmt = conn.prepareStatement("select order_id from orders where user_id = ? order by order_date desc limit 1");
				tempStmt.setInt(1, order.getUser_id());
				itemRs = tempStmt.executeQuery();
				
				if(rs.next()) {
					orderId = rs.getInt("order_id");
				}
			}
		}catch(SQLException e) {
			logger.error("Failed to create order: "+e.getMessage());
		}
		return orderId;
	}
	
}
