package org.techhub.client;

import java.time.LocalDateTime;
import java.util.*;

import org.techhub.model.ProductModel;
import org.techhub.model.UserModel;
import org.techhub.service.AuthService;
import org.techhub.service.AuthServiceImpl;
import org.techhub.service.ProductService;
import org.techhub.service.ProductServiceImpl;

public class EcommerceCartSystemApp {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		ProductService prodService = new ProductServiceImpl();

		AuthService authService = new AuthServiceImpl();
		boolean flag = true;

		do {
			System.out.println("1. Register as admin or normal user(user)\n2. Login as admin or user\n3. Exit");
			System.out.println("Enter your Choice: ");
			int ch = sc.nextInt();

			switch (ch) {
			case 1:
				sc.nextLine();
				System.out.println("Enter Username: ");
				String username = sc.nextLine();
				System.out.println("Enter Email: ");
				String email = sc.nextLine();
				System.out.println("Enter password: ");
				String password = sc.nextLine();
				System.out.println("Register as: 1. Admin 2. Normal User");
				int roleChoice = sc.nextInt();
				LocalDateTime userCreatedAt = LocalDateTime.now();
				String role = (roleChoice == 1) ? "admin" : "normal";

				String result = authService.registerUser(
						new UserModel(0, username, email, password, userCreatedAt, role)) ? "Registration successful!"
								: "Registration failed. Username or email may already exist.";
				System.out.println(result);

				break;

			case 2:
				sc.nextLine();
				System.out.println("Enter username: ");
				String loginUsername = sc.nextLine();

				System.out.println("Enter password: ");
				String loginPassword = sc.nextLine();

				Optional<UserModel> loggedInUser = authService.login(loginUsername, loginPassword);

				if (loggedInUser.isPresent()) {
					UserModel user = loggedInUser.get();
					if (user.getRole().equalsIgnoreCase("admin")) {
						System.out.println("Welcome Admin: " + user.getUsername());
						adminFunctionalities(sc, prodService);
					} else {
						System.out.println("Welcome User: " + user.getUsername());
						userFunctionalities(sc, prodService);
					}
				} else {
					System.out.println("Invalid username or password.");
				}
				break;

			case 3:
				System.out.println("Exiting Application....");
				flag = false;
				break;
			}

		} while (flag);

	}

	private static void adminFunctionalities(Scanner sc, ProductService prodService) {
		boolean flag = true;
		do {
			System.out.println("\nAdmin Menu: \n1: Add new Product\n2: View all Products\n3: Search Product\n4: Logout");
			System.out.println("Enter your choice: ");
			int ch = sc.nextInt();
			
			switch(ch) {
			case 1:
				System.out.println("Enter Product name: ");
				sc.nextLine();
				String prodName = sc.nextLine();
				System.out.println("Enter Product Description");
				String prodDesc = sc.nextLine();
				System.out.println("Enter Product Price");
				double prodPrice = sc.nextDouble();
				System.out.println("Enter Stock Quantity");
				int prodStockQuantity = sc.nextInt();
				LocalDateTime prodCreatedAt = LocalDateTime.now();

				String result = prodService.addNewProduct(
						new ProductModel(0, prodName, prodDesc, prodPrice, prodStockQuantity, prodCreatedAt))
								? "Product Added Successfully"
								: "Product Not Added";

				System.out.println(result);
				break;
			
			case 2:
				Optional<List<ProductModel>> olist = prodService.getAllProducts();
				if (olist.isPresent()) {
					List<ProductModel> list = olist.get();
					list.forEach(
							(p) -> System.out.println(p.getProductId() + "\t" + p.getName() + "\t" + p.getDescription()
									+ "\t" + p.getPrice() + "\t" + p.getStockQuantity() + "\t" + p.getCreatedAt()));
				} else {
					System.out.println("There is no Product data Available");
				}
				break;
				
			case 3:
				System.out.println("Enter Product Name: ");
				sc.nextLine();
				prodName = sc.nextLine();
				//System.out.println(prodName);
				ProductModel p = prodService.getProductByName(prodName);
				
				if(p!=null) {
					System.out.println(p.getProductId() + "\t" + p.getName() + "\t" + p.getDescription()
					+ "\t" + p.getPrice() + "\t" + p.getStockQuantity() + "\t" + p.getCreatedAt());
				}else {
					System.out.println("Product Not Found!");
				}
				break;
				
			case 4: // Logout
                System.out.println("Logged out as Admin.");
                flag = false;
                break;
               
			default:
                System.out.println("Invalid choice...");
                break;    
			}
		} while (flag);
	}
	
	private static void userFunctionalities(Scanner sc, ProductService prodService) {
        boolean flag = true;
        do {
            System.out.println("\nUser Menu:");
            System.out.println("1: View all Products");
            System.out.println("2: Search Product");
            System.out.println("3: Logout");
            System.out.println("Enter your choice: ");
            int userChoice = sc.nextInt();

            switch (userChoice) {
                case 1:
                	Optional<List<ProductModel>> olist = prodService.getAllProducts();
    				if (olist.isPresent()) {
    					List<ProductModel> list = olist.get();
    					list.forEach(
    							(p) -> System.out.println(p.getProductId() + "\t" + p.getName() + "\t" + p.getDescription()
    									+ "\t" + p.getPrice() + "\t" + p.getStockQuantity() + "\t" + p.getCreatedAt()));
    				} else {
    					System.out.println("There is no Product data Available");
    				}
                    break;

                case 2: 
                    sc.nextLine(); 
                    System.out.println("Enter Product Name: ");
                    String searchProdName = sc.nextLine();
                    ProductModel p = prodService.getProductByName(searchProdName);

                    if (p != null) {
                        System.out.println(p.getProductId() + "\t" + p.getName() + "\t" + p.getDescription()
                                + "\t" + p.getPrice() + "\t" + p.getStockQuantity() + "\t" + p.getCreatedAt());
                    } else {
                        System.out.println("Product Not Found!");
                    }
                    break;

                case 3: 
                    System.out.println("Logged out as User.");
                    flag = false;
                    break;

                default:
                    System.out.println("Invalid choice...");
                    break;
            }
        } while (flag);
    }
}


